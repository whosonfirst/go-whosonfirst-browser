// Code generated by go-bindata.
// sources:
// www/templates/html/id.html
// www/templates/html/inc_common_css.html
// www/templates/html/inc_common_footer.html
// www/templates/html/inc_common_header.html
// www/templates/html/inc_common_meta.html
// www/templates/html/inc_id_basics.html
// www/templates/html/inc_id_status.html
// www/templates/html/inc_id_status.html~
// www/templates/html/index.html
// DO NOT EDIT!

package templates

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _wwwTemplatesHtmlIdHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x57\x41\x6f\xe3\x36\x13\x3d\xcb\xbf\x82\x1f\x2f\xdf\x29\xd6\x65\x4f\x59\x59\x2d\xb0\xd9\x05\x02\xec\x76\x8d\x76\x81\x45\x4f\xc1\x58\x1c\x5b\x13\x50\xa4\x40\x8e\xe2\xb8\xae\xff\x7b\x41\xc9\x52\x24\x5b\x4e\xec\x18\x6d\x0e\x89\x4d\xce\x7b\xf3\xf8\x66\x34\x62\xb6\x5b\xa1\x70\x49\x06\x85\x24\x25\xc5\x6e\x37\x49\xfe\x77\xf7\xfd\xd3\x8f\x3f\xe7\x9f\x45\xce\x85\x4e\x27\x49\xf8\x23\x34\x98\xd5\x4c\xa2\x91\xe9\x44\x88\x24\x47\x50\xe1\x43\xf8\x49\x98\x58\x63\xba\xdd\x8a\xe9\x1f\xf3\xdf\xa7\xbf\x41\x81\x62\xb7\x13\x7f\x8b\x76\xe5\x5e\x35\xdf\x7f\xe6\xf6\xff\x5e\x7c\x37\xe2\x0b\x39\xcf\x49\xdc\xe0\xf6\x2c\xdb\xad\x60\x2c\x4a\x0d\x1c\x94\x98\xec\x21\xb3\x45\x61\xcd\x43\x81\x0c\xb5\xac\x7d\xb2\xf0\x5d\x94\xce\x96\xe8\x78\x33\x93\x41\xdb\xad\x06\xcf\x85\x55\xb4\x24\x54\x52\x64\xd6\x30\x1a\x9e\xc9\x90\xff\x2b\x78\xfe\xb6\xdf\x12\xbb\x9d\x14\x71\x3a\x89\x84\x38\xc1\x66\x57\xb7\xbc\x29\xb1\xc7\x01\x8e\x29\xd3\x58\xe3\x4e\x62\x3c\x31\x3e\x18\x28\xfa\xc0\xe1\x61\x5f\xc7\xd7\x46\x1c\x08\xef\x5b\x49\x5e\x40\xe7\xe6\x5c\x43\x86\x41\x65\xbd\x63\xba\xf5\x4f\xb6\x32\xec\x36\xfb\x33\x9e\xcc\xa5\xd0\x67\x8e\x4a\x26\x6b\x7a\x19\xef\xd9\x1f\x94\x47\xdc\xdf\x85\xbc\x83\x1a\xbe\xce\x4c\x05\xac\xfa\xa7\x88\x4b\xb3\x8a\x07\xf8\x5f\x3c\xfd\x85\xb3\x67\x5f\xf4\x88\x4e\xf0\xf1\x9a\x98\xd1\xdd\x66\xe0\x94\x14\x4f\xa0\x2b\x9c\x49\x5f\x15\x05\xb8\xcd\x2b\x32\x5a\x58\xa8\x48\x4f\xca\xaf\xa0\xb5\x5d\x72\x8e\x65\x30\xcf\x9f\x41\x90\x39\x04\xb6\xee\x2a\x8e\xca\xe9\xbe\x1d\xa4\xe2\x73\xdd\x6c\x19\xfe\xb3\xc6\x68\x13\xfe\x4b\xdd\xd1\xd2\x5f\xd7\x22\x8d\x34\xe1\x5d\x36\x93\xf1\x23\x3c\x41\xb3\x10\x6b\x9b\x81\x5e\x5a\x07\x2b\x9c\x16\x64\xa6\x8f\x5e\xa6\x49\xdc\x6c\xa6\xd1\xdb\x78\xaf\xa9\x2c\x37\x05\x94\xd3\xcc\x59\xef\x73\x20\xe7\x87\x24\x67\x0a\x59\xe7\xd6\x5b\xb3\x0c\x06\x4d\xd7\xeb\xf5\xa1\x90\x4b\xe0\x0e\x8d\x42\x37\xaa\xe2\x2c\xfc\xde\x7b\xc2\xeb\x4f\x92\x41\x96\xe3\x35\x67\xa9\x1c\xbd\xff\x20\x06\xf9\x0a\x30\x14\xb4\xdc\x0c\xf1\x22\x12\x9d\xfc\x4b\xb8\x56\x68\x1f\xbd\x3d\xea\xae\x4b\x28\x34\xc2\x52\x23\x4f\x2b\x26\x3d\x5e\x97\x8b\x68\x3c\x6f\xf4\x89\xfa\x5e\xc4\x93\x83\x51\x1a\x0f\x7b\xbe\xf1\xe9\x12\xbe\x85\xb3\x6b\x8f\x6e\x5a\x40\xe9\xaf\xb1\xa9\xe5\x21\xf5\xfe\xb3\xf5\x38\xc8\x10\x9f\x90\xf3\xc6\xdd\x23\xf3\xbe\x77\xf5\x08\xf7\x9e\xb8\xbd\xf8\x24\x0b\xab\x36\x42\x01\xc3\x4d\x2f\xed\x4d\xe5\xe8\x06\x8d\x2a\x2d\xb5\xe3\xfa\x0e\x18\x3e\xef\x57\xc2\x90\x4c\x3b\x4b\x15\x3d\x89\x4c\x83\xf7\x33\x19\x06\x22\x90\x41\x27\xd3\xb3\x84\x05\x15\xe8\x6a\x6d\xdd\xc4\x05\x32\x2d\x5d\x4f\x91\x14\xa4\x06\x0b\x37\xf5\xeb\x4b\x1e\x4b\x0f\x71\x07\xf3\xfc\x28\xa6\x04\xce\x5f\xa2\xe6\xc0\xf9\xa9\x38\x87\x66\x48\x39\xaf\x97\xfa\xc4\x1a\x98\xb8\x52\xf8\x12\xf3\x75\xbf\xd2\x8b\xb1\x66\x75\x18\xd4\x2e\xbd\x44\x15\x64\x46\xd8\xbe\x91\x69\x09\x87\x91\xc7\x9c\x21\x74\x84\x16\x9e\xc7\x68\xe1\xf9\x98\x36\x44\x8e\xd0\xc2\xf3\x80\x36\x9d\x84\xbb\xe7\x89\xc2\x87\xad\xba\xf4\x51\xaf\x3f\x82\x83\x05\x94\xb2\x8d\x77\x76\x2d\x45\xfd\xdc\xcf\xe4\xc2\x3a\x15\xae\x3a\x56\x93\x12\x0e\xd5\xc7\xd0\xe1\x8a\x9e\x9a\x2c\x87\x2d\x16\x90\xe9\x24\x8a\x46\x9a\x8a\xd4\xc3\x02\x3c\x65\x5e\x8a\xe9\x6e\xd7\x81\x1b\xae\x31\x55\x47\x94\xf5\xaf\xe1\xb9\xf4\xb8\xce\x85\xae\xf0\xe3\x1e\x55\xf3\xe5\x1f\xd2\x79\xf7\xae\x4a\xe2\xfc\x43\x6f\xaf\x75\x60\xd0\x5a\x5d\x70\x67\x8a\xc7\x8c\x6b\xca\xe8\x4d\xcc\x4d\xe9\x90\x79\xd3\x3a\xd5\x48\x3f\x03\xe6\x60\xdd\xb9\x1b\x1d\x18\x14\x0d\x3e\xbe\xdf\x8a\xb1\xba\x78\x06\xae\x9a\xba\x44\x5d\x25\xda\xfc\x65\xfa\xf3\xc7\x97\x24\x2e\x87\x1a\x06\xe2\x26\x2f\x1b\xc3\x37\x5e\x1c\xe6\x45\x37\x8b\x4e\xcd\x99\xa5\xb5\xdc\x9f\x33\x0d\x55\x6f\x1c\x86\x29\x98\x4e\x92\xb8\xf9\x4f\x71\xbb\x15\x68\xc2\x13\x3e\xf9\x27\x00\x00\xff\xff\x0f\x6f\xb2\x32\x56\x0e\x00\x00")

func wwwTemplatesHtmlIdHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlIdHtml,
		"www/templates/html/id.html",
	)
}

func wwwTemplatesHtmlIdHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlIdHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/id.html", size: 3670, mode: os.FileMode(420), modTime: time.Unix(1576398415, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlInc_common_cssHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcd\xe1\x09\xc3\x20\x10\x06\xd0\xdf\xcd\x14\xe2\x00\x66\x81\xa6\xab\x84\x72\x9e\x78\xd4\x9c\xe0\x77\x20\x45\xdc\xbd\x94\x64\x81\x0c\xf0\x78\x63\x44\x4e\xa2\xec\xbc\x28\xed\x54\x8f\xa3\xea\x4e\x80\x9f\x73\x79\x16\xd1\x8f\x6b\x5c\x36\x0f\xfb\x16\x46\x66\x36\xef\x72\xe3\xb4\xf9\x95\x80\xb5\xe7\x8a\xaa\x49\x1a\x2c\xf4\xde\xc3\x1f\xbe\x6e\xba\xf3\x3c\xe9\xc3\xdd\xc4\xb0\xb7\x09\x05\x89\x57\x3d\x06\x6b\x9c\x73\xf9\x05\x00\x00\xff\xff\xa4\x70\x59\xda\xd7\x00\x00\x00")

func wwwTemplatesHtmlInc_common_cssHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlInc_common_cssHtml,
		"www/templates/html/inc_common_css.html",
	)
}

func wwwTemplatesHtmlInc_common_cssHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlInc_common_cssHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/inc_common_css.html", size: 215, mode: os.FileMode(420), modTime: time.Unix(1576393981, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlInc_common_footerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xb1\x0a\xc3\x20\x10\x80\xe1\xfd\x9e\xe2\xea\x6e\xdd\x8b\x39\xfa\x26\x41\xcc\x89\x82\x7a\xc1\x1c\x74\x10\xdf\xbd\x43\xba\x74\xfb\xf9\x86\x7f\xce\x83\x53\xe9\x8c\xa6\xf4\xb8\x47\x69\x4d\xfa\x9e\x44\x94\x87\x59\x0b\xc0\xdf\x8d\xe5\xd8\xcc\x8f\x09\x10\x11\xfd\xc3\x5a\xf4\x01\xf3\xe0\xb4\x99\xac\x7a\x5e\x2f\xe7\xf4\x53\x54\x79\x3c\xa3\x34\x17\x6a\x95\xa4\x99\xcf\x1a\x22\x5f\x86\xde\xff\xe0\x5d\x20\xb4\x96\xc0\xbb\x7b\x4c\x00\x73\x72\x3f\xd6\x82\x6f\x00\x00\x00\xff\xff\xd8\x68\xd3\xe6\x96\x00\x00\x00")

func wwwTemplatesHtmlInc_common_footerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlInc_common_footerHtml,
		"www/templates/html/inc_common_footer.html",
	)
}

func wwwTemplatesHtmlInc_common_footerHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlInc_common_footerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/inc_common_footer.html", size: 150, mode: os.FileMode(420), modTime: time.Unix(1576394134, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlInc_common_headerHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\xbd\xae\xd4\x30\x10\x46\xeb\xf8\x29\x46\x43\x41\x15\x59\xa2\xdc\x8d\x5d\xf1\x23\x24\x24\x1a\x24\xca\x2b\xc7\x9e\xdc\x58\x6b\xcf\x04\xc7\x59\xee\x2a\xca\x23\xd0\xd1\xf3\x8a\x3c\x02\xda\x04\xb6\xa0\xfb\x8a\x23\x1d\xfb\xcc\xba\x06\x1a\x22\x13\x60\x64\xff\xe4\x25\x67\xe1\xa7\x91\x5c\xa0\x82\xdb\xa6\xba\x63\x42\x0c\x06\x03\x55\x17\xd3\xdc\x66\xe2\x05\xad\x02\x00\xe8\xd8\x5d\xad\x6a\x54\x73\x1f\x3b\x34\x93\x2b\x7e\x6c\xd9\x5d\x63\x5b\xe2\xf3\x58\xd1\xaa\x66\x47\x07\x29\x19\x32\xd5\x51\x82\xc1\x0f\xef\xbe\x20\x38\x5f\xa3\xb0\x41\x1d\x83\x46\x98\xeb\x2d\x91\xc1\xc8\x29\x32\xb5\x7d\x12\x7f\x41\xdb\xa8\xa6\xe9\xfa\xa5\x56\x61\xa8\xb7\x89\x0c\xce\x4b\x9f\x63\x7d\xe0\xbd\xf3\x97\xe7\x22\x0b\x87\xd6\x4b\x92\x72\x7a\x35\x0c\xc3\xb9\x97\x12\xa8\x9c\x80\x85\xe9\x9c\xdd\x4b\xfb\x3d\x86\x3a\x9e\xde\x14\xca\xe7\x10\xe7\x29\xb9\xdb\xe9\x10\x9d\xd1\xfe\xfe\xf5\xf3\x47\xa7\x0f\x89\xbd\xfb\x22\x4f\x4b\xfd\xab\xab\xf4\x52\x11\xae\x2e\x2d\x64\x10\xf7\x2f\x7e\x43\x60\x97\x69\x1f\x53\x72\x9e\x46\x49\x81\x8a\xc1\x4f\x22\x97\x65\x02\x07\x5f\x47\x79\x3d\xc3\x67\x86\xf7\xb1\xcc\x15\x3e\xbe\x7d\x3c\xf7\x7f\xb9\xfe\x57\x47\xdf\xf3\x58\xd5\x74\xfa\x91\xb4\x2f\xe0\x13\xb9\x62\xd0\xa5\x84\xa0\xad\x3a\x9a\xeb\xe3\x26\x56\xad\x2b\x10\x07\xd8\x36\xf5\x27\x00\x00\xff\xff\x56\x56\xba\x56\xc6\x01\x00\x00")

func wwwTemplatesHtmlInc_common_headerHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlInc_common_headerHtml,
		"www/templates/html/inc_common_header.html",
	)
}

func wwwTemplatesHtmlInc_common_headerHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlInc_common_headerHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/inc_common_header.html", size: 454, mode: os.FileMode(420), modTime: time.Unix(1576394126, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlInc_common_metaHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x6a\xf3\x30\x10\x84\xef\x79\x0a\xa1\x73\x44\xf8\x6f\x7f\x69\x55\x28\xa1\xa1\xbd\x27\xd0\x5b\x58\x4b\x9b\x7a\xa9\xb4\x52\xa5\x75\x12\x63\xfc\xee\x25\x69\x29\x36\xb9\xf4\xa6\x19\x66\xbe\x41\x3b\x0c\x1e\x0f\xc4\xa8\x34\xb1\xdb\xbb\x14\x63\xe2\x7d\x44\x01\x3d\x8e\x8b\x87\xcb\x43\xb5\x22\xd9\xe0\x67\x47\x47\xab\xd7\x89\x05\x59\xcc\xb6\xcf\xa8\x95\xfb\x56\x56\x0b\x9e\x65\xd5\x4a\x0c\xf7\xca\xb5\x50\x2a\x8a\xdd\x6d\x37\xe6\xbf\x7e\xfc\x61\x30\x44\xb4\xba\xe0\x01\x4b\xc1\x32\x69\xa6\x42\xef\xc4\xbf\xb9\xe9\xd6\x9b\xd9\x3d\x99\x75\x8a\x19\x84\x9a\x30\x9d\x7b\x7d\xb6\x77\x5a\xad\xe6\x70\xc8\x39\xa0\x89\xa9\xa1\x80\xe6\x84\x8d\x81\x9c\x8d\x83\x0c\xf3\x6e\x8f\xf5\x6f\xd5\x2a\x20\x5d\x35\x0d\x14\x53\xa5\x9f\x31\x9a\x00\xee\xe3\x86\xf2\x02\xec\x5b\x0c\x7e\x53\x08\xd9\x87\x7e\x7a\x9f\xd2\xe1\x4d\xfe\x48\x78\xca\xa9\xc8\x24\x77\x22\x2f\xad\xf5\x78\x24\x87\xe6\x2a\x96\x8a\x98\x84\x20\x98\xea\x20\xa0\xfd\xb7\x54\x11\xce\x14\xbb\x38\x31\x88\xe7\x46\x57\xb1\x5c\xd5\xe5\xef\x96\xd3\x75\x7a\x18\x14\xb2\x57\xe3\xb8\xf8\x0a\x00\x00\xff\xff\x65\xf3\xbe\xc6\xf4\x01\x00\x00")

func wwwTemplatesHtmlInc_common_metaHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlInc_common_metaHtml,
		"www/templates/html/inc_common_meta.html",
	)
}

func wwwTemplatesHtmlInc_common_metaHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlInc_common_metaHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/inc_common_meta.html", size: 500, mode: os.FileMode(420), modTime: time.Unix(1576394094, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlInc_id_basicsHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x96\x4d\x6f\xe3\x36\x13\xc7\xcf\xf1\xa7\x18\x28\x0b\xe4\xb2\x96\x9e\x3c\xd9\x53\xa0\xe8\xd0\x5d\x2c\x60\xa0\x2f\xc1\xa6\xc5\x1e\x03\x4a\x1c\x4b\x83\x52\xa4\x4a\x8e\xe2\x18\x86\xbe\x7b\x41\xbd\x58\xb2\x2d\x6f\x93\x6d\x1b\xa0\x37\x89\x9a\x19\xfe\xe7\xc7\xe1\x8c\x76\x3b\x89\x6b\xd2\x08\x01\xe9\xec\x91\xe4\x63\x2a\x1c\x65\x2e\x68\x9a\x45\x5c\xdc\x24\x0b\x00\x80\xd8\x55\x42\x43\xa6\x84\x73\x77\xc1\xa6\x30\xce\xe8\x35\x59\xc7\x4b\x2d\x4a\x0c\x92\xdd\x0e\xc2\x87\xfb\x2f\xe1\xcf\xa2\x44\x68\x9a\x38\xf2\xe6\x53\x4f\x92\x87\x6e\x95\x12\x19\x2e\xa5\x60\x74\x41\x32\x35\x27\x07\xe2\xdb\x3b\xb6\xae\xbc\xad\x26\xdb\xde\x0f\x4b\x47\x7b\x93\x3e\x0d\x35\x7a\x7d\x34\xb5\x66\xbb\xdd\xbb\x84\x8b\x38\xf2\xf9\x2e\xe2\x6a\x90\x5e\x0a\xa5\x92\xc5\xc5\x6e\x07\xb4\x06\xfc\xa3\xf3\x5b\xb9\x8f\xb5\xb5\xa8\x39\x7c\x60\x4b\x3a\xff\xac\x44\x0e\xc1\x75\x00\x4d\xb3\xb8\x38\x2b\xdb\xb1\xe0\xda\x2d\xb3\xce\x35\x48\xbe\x22\xa4\xa8\x08\x9f\x10\xb8\x20\x07\x16\x33\x63\x25\xb0\x81\x14\xa1\xb7\x0a\x87\x64\xbc\x02\x54\x0e\xff\x5a\xc6\xff\x5e\x26\x43\x1b\x3e\x90\xa2\x0d\x28\xa3\x73\xb4\xdf\x23\xca\x6f\xe8\x9f\xb5\x84\xa6\xb9\x00\xe8\xe0\x45\x1d\xbd\x8b\x45\x1c\x55\x1e\xaa\xa4\xa7\x93\x32\x90\xc8\x82\x94\x0b\x92\x45\xeb\x73\xcc\xf9\x13\x56\x16\x33\xc1\x28\x67\x50\x7f\xb3\x48\xfa\x34\xe5\x3e\x40\x90\xfc\x3a\x49\xa8\x10\x0e\x52\x44\x0d\xa5\xb0\xbf\xa3\x04\xe1\x60\x34\x0d\xa7\x25\xb4\xcf\xab\x7d\x9b\x55\xf9\x50\x57\x68\x1d\xca\x59\x95\x17\x00\x7b\xc7\x59\x05\x6e\xef\x0d\xe9\x16\xb8\x40\x58\x1b\xa5\xcc\x86\x74\xde\xdb\xba\xdb\x2e\xd7\x5a\xcd\x5e\x07\x43\x9a\xd1\x7a\x86\xfe\x10\xac\xd0\x39\xc2\x3b\x7a\x0f\xef\x1c\xdc\xde\x75\x1a\x47\x85\x3f\x6c\xbb\xf2\x50\x94\xc4\x02\x0a\x8b\xeb\xbb\x20\x22\x19\xed\x76\xde\xbe\x69\x82\xb9\x2d\x48\xc2\xd1\x95\xa7\xf5\x36\x00\x29\x58\x2c\x0f\xed\xee\x82\x7d\xa0\x64\x78\x8a\x23\x91\xc4\x91\xa2\x64\x52\x24\x7d\x85\xd4\xaa\x83\x1c\x1e\xc0\xed\x4d\xa6\xe4\xce\x21\x27\x9d\x9f\xa9\x8c\x13\xe0\x7b\xce\xee\xdf\x86\xec\xfe\x33\x88\xe3\x48\xd2\x53\xe2\x49\xcf\x5f\xcf\x7e\x10\xf4\xdd\xb0\x4a\x56\xec\xe0\x6b\x61\xae\x1c\xfc\xa2\xe1\xb3\x37\x81\xd5\x27\xdf\xb2\xcf\xde\x43\x92\x63\xbf\x5d\xc9\xb1\x3d\x83\xd0\x12\x88\xfd\xe9\x28\xc1\xf4\x84\xf0\xdb\x97\x55\x1b\x69\x40\x56\x30\x57\xee\x36\x8a\x3c\x82\x70\x12\x32\x34\x36\x8f\xf6\x8d\x5f\x70\x71\x0e\xa9\x45\x55\x09\x2e\x26\x53\xa2\x33\xf6\xb0\xc2\xb6\x27\x9d\xaf\xb0\x7b\xe1\x3b\xdd\x4a\x42\xb0\xfc\x30\x36\x9b\x6a\xda\x43\xae\x1c\x54\xad\xd5\x80\x20\x33\x12\x93\xe5\x87\x38\x6a\x1f\x60\x53\x50\x56\x00\x69\x49\xbe\xa9\x38\x20\x6e\xef\xfc\x3e\xbf\xcb\x82\xd0\x0a\x9b\x15\xdb\x20\x29\x6b\xc5\x54\x29\xec\x23\x3a\x2f\x11\x52\xcc\x44\xed\xf0\x94\x48\x4e\x5c\xd4\x69\x98\x99\x32\x9a\xe4\x1b\x1d\xd4\xab\x35\x15\x5a\x26\x74\x11\x5b\xc4\xa8\x14\x8e\xd1\x46\x93\xe5\x8d\x59\x5f\x76\xbb\x3d\xfa\x33\x6a\xd5\x55\x15\x6a\x07\xce\x94\xc8\x54\xa2\x1b\x41\x0d\x55\x73\x34\x81\x26\x94\x6e\x5e\x47\xe9\xe6\x90\x52\x89\x42\xb7\x84\x4a\xca\x0b\x06\x85\x39\x31\x95\x82\x51\x6d\xa1\x10\x4f\xf8\x1d\xd4\x2a\x34\xfe\xd3\x9b\xc0\x13\x36\xaf\x11\x44\x6a\x6a\xee\xc6\xa6\x33\x96\xc1\xac\xfd\x8b\xce\x5f\x83\xf1\xff\xaf\xc3\x78\x3d\x87\x71\x83\x2d\x33\x7d\xc5\x90\x1a\x2e\xd0\xa2\x04\xb6\x5b\xdf\xea\xd8\x40\x45\x1a\xa4\xd9\xe8\xe9\x7c\xbf\x3a\x53\x96\x54\x96\x28\x49\xf0\x40\xf8\xed\xcb\x52\xd1\x1a\x7d\xbe\x99\x29\x2b\xd5\x5e\x24\xd9\xf5\xba\x17\xd1\xbc\x7e\x09\xcd\xd5\x29\x4d\xcf\xd1\xe3\xda\x20\x08\xfb\x46\x99\xd6\x3a\x43\xcb\x82\x74\x0b\xb9\x3b\xcf\x7e\x72\xf5\xe5\xdd\x9d\x98\xd1\x78\x5a\x4c\x63\x96\x2b\xf6\xb8\x3a\x8f\xee\x8f\xe2\x78\x06\x1d\x40\xfa\x67\xa6\xd1\x71\xc8\xe4\x74\x46\x9c\x5a\x9d\x5e\x8b\xa3\xdf\xac\x7e\xde\xa4\xa6\xd6\x7e\xce\x43\x6a\x9e\x0f\x06\xc4\xe5\xac\xf4\x1c\x7d\xfb\xb2\x5b\x98\x5b\x5c\x0e\xc1\x52\xf3\x3c\xce\x85\x9f\x48\xff\x28\x98\xb8\x96\xd8\x34\xef\x61\xba\x6c\x74\xde\xae\xc3\xc1\x07\xf1\x3c\x6b\x2f\x9e\xa7\xf6\xfb\x3a\x9d\x26\x53\x59\xd2\x19\x55\x42\x41\x86\x9a\xad\x21\xf9\xb7\x53\x1a\x02\x8d\xf9\x0c\xe2\x0e\x44\x1f\x4b\x1b\xd1\x0f\x7f\x01\xbb\x1d\x6a\xd9\x34\x8b\x3f\x03\x00\x00\xff\xff\x12\xe5\x42\xb8\x0f\x0e\x00\x00")

func wwwTemplatesHtmlInc_id_basicsHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlInc_id_basicsHtml,
		"www/templates/html/inc_id_basics.html",
	)
}

func wwwTemplatesHtmlInc_id_basicsHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlInc_id_basicsHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/inc_id_basics.html", size: 3599, mode: os.FileMode(420), modTime: time.Unix(1576398184, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlInc_id_statusHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\x4f\x6e\xa4\x3a\x10\xc6\xd7\x70\x0a\x3f\xbf\x35\x78\x91\x5d\xc6\xed\xcd\x8c\x46\x8a\x66\x13\x25\xb3\x8f\xdc\xb8\x82\x2d\x81\x41\x2e\x93\xa4\x85\xb8\xd6\x1c\x60\x4e\x36\x02\x9b\x6e\x3a\xff\xa4\x40\xaf\x30\x76\xf9\x57\xf5\x7d\x96\xaa\xfa\x5e\xc1\xa3\xb1\x40\xa8\xb1\xc5\x83\x51\x0f\xe8\xa5\xef\x90\x0e\x43\x9a\x72\x65\x9e\x88\x51\x3b\xfa\xac\x1b\x6c\xec\xa3\x71\xe8\x33\x6d\xc0\x49\x57\xe8\x03\x25\x45\x25\x11\x77\x14\xa1\xf0\x54\xa4\x84\x10\xc2\xf5\xd5\x74\xe1\x14\x24\x8e\x4b\xce\xf4\x95\x48\x39\x53\xe6\x49\x7c\xc0\x0e\xb9\xb3\x97\xd7\xe8\xc0\x56\xe0\xa5\xa9\x90\x34\x2d\x58\x91\x26\x1c\xbb\xba\x96\xee\x20\xd2\x64\x4e\x8d\xfe\x50\xc1\x8e\x2a\x83\x6d\x25\x0f\xd7\xc6\x56\xc6\xc2\x37\x3a\xe5\x79\x89\x74\x2a\xc2\x97\x70\x49\xb4\x83\xc7\x1d\xfd\x3f\x1e\xcc\x49\xa5\x2d\x74\xe3\xa8\xf8\xfb\x87\x33\x29\x42\xd9\x09\x67\xa7\x74\x73\x25\x59\x0d\xb6\x8b\xe9\x63\x11\xa3\xaa\x88\xf1\x72\x5f\x41\xe6\x00\xdb\xc6\xa2\x79\x02\x2a\xd2\x24\xe1\xd3\xee\x59\x08\x09\x81\x58\x4f\x01\x13\xc5\xbb\x71\x99\x70\xaf\x85\x41\x52\x74\xce\x81\xf5\x9c\x79\x1d\xb7\xd5\x0c\x78\x6b\x1e\x15\x7d\x4f\xf2\xfb\xdb\xbb\xfc\x06\xbf\x87\x8b\xf9\xbd\x77\xc6\x96\x3f\x2b\x59\x92\x61\xe0\xcc\xab\x75\x98\x1b\xfc\xed\x3a\xd8\x88\xf8\x65\x9b\x67\xbb\x60\x4c\x7a\x59\x10\xfc\x9e\x76\x90\x08\x6a\x85\xf4\xe9\xde\x66\xe5\x81\xb2\x45\xf8\x4c\xf8\xa2\x6e\x05\xad\x83\x42\xfa\x35\xda\x7f\x1c\xef\x6e\xd5\xbf\x20\xbd\xeb\xc1\x47\xa1\x5f\x14\x8b\x5d\x0b\x0e\x41\xad\x11\x7b\x7f\xbc\xbb\x55\xec\x82\xb4\xe1\xc1\xcf\x28\x2b\x7d\x30\xb6\x5c\x6f\x84\xb1\xe5\xa5\x9c\x18\x51\x17\xb0\x22\x60\x3e\xf4\x22\x21\xc9\xd8\x3e\x13\xce\xa6\x46\x38\xb7\xf3\x30\x27\x62\x6f\xe5\xec\xbc\xe5\xc6\x88\xb0\x17\x7e\x4f\x93\xe5\xbf\x2c\x9b\x76\xce\xba\xf1\x62\x48\x91\x78\x1a\x67\x15\x36\x9d\x2b\x60\x9c\x0b\x61\xb1\x1c\x0c\xf1\xe8\xb3\xc9\xb0\x24\x76\x55\xfc\xe7\x95\x11\x47\x8c\xf6\xbe\xc5\x6b\xc6\x94\xf4\x32\x5f\x58\x96\x37\xae\x64\xb3\x5d\xb7\xd2\x6b\x32\x0c\x54\x7c\x25\x3a\x54\x51\x99\xcf\xb2\x96\xc6\xeb\x6e\x9f\x17\x4d\xcd\x96\xcf\x35\xe2\x8f\xb8\x3b\x68\x1b\x32\x0c\x6c\x5f\x35\x7b\x56\x4b\xf4\xe0\xd8\x59\xc0\x9b\xea\x2e\x49\x7d\xad\x82\x9d\x6c\x0c\x4f\x9a\x65\x22\x4d\xfb\x1e\xac\x1a\x86\xf4\x5f\x00\x00\x00\xff\xff\x83\x52\x2a\x13\xb1\x08\x00\x00")

func wwwTemplatesHtmlInc_id_statusHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlInc_id_statusHtml,
		"www/templates/html/inc_id_status.html",
	)
}

func wwwTemplatesHtmlInc_id_statusHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlInc_id_statusHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/inc_id_status.html", size: 2225, mode: os.FileMode(420), modTime: time.Unix(1576398964, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlInc_id_statusHtml2 = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\xcf\x6e\xdb\x30\x0c\xc6\xcf\xce\x53\xb0\x2e\xb0\x9b\xad\x0d\x05\x76\x68\x15\x5d\x3a\x0c\x28\x76\x29\x9a\x61\x77\xc5\x66\x2d\x01\x8a\x1c\x48\x74\xbb\xa2\xf0\x6b\xed\x01\xf6\x64\x83\x23\xdb\xf1\x9c\x3f\x48\x9d\x9c\x42\xd0\xe4\xf7\x91\x3f\x07\x66\x04\xc0\x73\xfd\x02\x3a\x9f\xc7\xaf\xaa\xf4\xa5\x7d\xd6\xce\x53\xe2\x49\x52\xe5\x63\xc8\x8c\xf4\x7e\x1e\x7b\xcc\x28\x16\xb3\x59\x04\x00\xc0\xd5\x0d\x78\x7a\x33\x38\x8f\x09\x7f\x53\x22\x8d\x2e\xec\xad\xc1\x67\x82\x2b\xbd\x5a\x97\x8e\xa4\xa5\xbb\x78\xa3\xd9\xea\x88\xf0\x0b\x5c\x82\x72\xf8\x3c\x8f\xaf\x47\x06\xd2\x66\xaa\x74\xb1\xf8\xfb\x87\x33\x29\x38\x53\x37\x22\x98\xb5\x96\x24\x97\x06\xdb\x14\x00\xbf\x4a\x92\x59\xd4\xcc\x4e\x4e\x6c\x82\x26\x54\xe2\xd3\xf5\x97\xaf\x9f\xef\x38\x23\x35\xcc\x2e\x36\x56\xe3\xec\x2f\x69\x2a\x1c\x27\xef\x9b\xfd\x73\xb4\xd9\xe0\x09\x67\x9d\x49\x92\x6c\x27\x08\xb9\xa6\x47\x7b\xc8\x2a\xe7\xd0\x52\xdb\xd3\x55\xe4\xdd\x72\x7b\xc0\x8a\xf7\x77\x48\x17\x8f\x4f\xe9\x83\xbf\x0f\xcd\xe9\x82\x9c\xb6\xc5\x77\x23\x0b\xa8\x6b\xce\x28\x9f\x2e\xf5\xe0\x7f\xba\x0a\x2f\x20\xf3\xc3\x96\xaf\x76\x47\x27\x00\x19\x82\xe8\xe2\x40\x03\xa5\xc7\x7c\x22\x8c\x4d\xef\x45\x58\x04\xa5\x73\x51\x74\x2a\xa7\x92\xe8\xfe\x12\x39\xae\x1d\x66\x92\x7a\x10\xd1\xc9\x9e\xdf\xfa\xd6\xbd\x1c\x26\x09\x8d\x31\x34\x22\x87\x2a\x3f\xba\xaa\xaf\xd6\xe8\x3c\xe6\x13\x56\x5d\xf4\xad\x67\xae\x3a\x10\xda\xb7\xea\x04\x91\xa9\x14\xb4\x2d\x26\x63\xd0\xb6\xb8\x10\x87\x46\xe9\x7c\x10\x41\xe5\x30\x89\x08\xa2\xfe\x0b\xcd\xb6\x9f\x68\xce\x72\xfd\x12\xae\xc5\xde\xe3\xa2\x34\x3a\xe9\x32\xf5\x76\xf8\xbe\x34\x2d\xdb\x32\xd1\x87\x83\x0b\xb2\xab\x72\xf4\x88\xb4\x43\x45\xed\xc4\x9b\xc1\x8e\xb9\xfb\xb2\x72\x19\x36\xa7\x2b\x04\xc3\xdb\xd5\x3e\x3a\xf5\x78\x55\x66\x8b\xcd\x68\xd1\x0b\x29\xa2\xb5\xbf\x65\x2c\x97\x24\xd3\x01\xa0\xb4\x74\x05\xeb\xde\xc6\xa3\x24\x05\x75\x1d\x8b\x8f\x54\x87\x39\x8c\x3e\xee\x5b\x68\x52\xd5\x32\xcd\xca\x15\x1b\xbe\x9e\xc6\xa0\x17\x7c\xc2\x75\x09\x75\xcd\x96\xa6\x5c\xb2\x95\xf4\x84\x8e\xfd\x57\xb0\x33\xdf\x25\x55\x47\x7b\x70\xd6\xa2\xec\x5e\x26\xc0\xec\x5f\x00\x00\x00\xff\xff\xac\x62\xe8\x8e\xc2\x08\x00\x00")

func wwwTemplatesHtmlInc_id_statusHtml2Bytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlInc_id_statusHtml2,
		"www/templates/html/inc_id_status.html~",
	)
}

func wwwTemplatesHtmlInc_id_statusHtml2() (*asset, error) {
	bytes, err := wwwTemplatesHtmlInc_id_statusHtml2Bytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/inc_id_status.html~", size: 2242, mode: os.FileMode(420), modTime: time.Unix(1576397137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _wwwTemplatesHtmlIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xbd\x4e\x05\x21\x10\x85\x6b\x79\x8a\x91\xc6\x92\x17\x18\x29\xfc\x6b\xaf\x85\x89\xb1\xba\xc1\x65\xae\x4b\x02\x83\x81\x49\xd4\x10\xde\xdd\x20\xbb\x85\xcd\xd2\x00\x93\x6f\xf2\x9d\x9c\xd6\xc0\xd3\x25\x30\x81\x0e\xec\xe9\x5b\x43\xef\x0a\xaf\x1f\x4e\xf7\x2f\x6f\xcf\x8f\xb0\x4a\x8a\x56\xe1\xb8\x20\x3a\xfe\xb8\xd5\xc4\xda\x2a\x00\x5c\xc9\xf9\xf1\x18\x07\x25\x48\x24\xfb\xba\xe6\x9b\x0a\x27\x86\xa7\x50\xaa\xa0\x99\xd3\x8d\x69\x4d\x28\x7d\x46\x27\x7f\xa6\xe5\xbc\xe4\x94\x32\x9f\x13\x89\xd3\xbd\x1f\x43\x4b\xad\x93\x41\xb3\x6b\xf1\x3d\xfb\x1f\xab\x8e\xf7\x06\x4c\x65\xac\xee\x41\x93\x0b\x6c\xd5\x15\xc0\xff\xac\x70\x57\xf2\x57\xa5\xb2\x63\x66\x72\xf3\x77\xec\xb8\xe4\x2c\xd3\xb1\xb1\x68\x66\x34\x34\xb3\xbc\xd6\x80\xd8\x8f\x5a\x7f\x03\x00\x00\xff\xff\xdf\x2a\xbf\x41\x6c\x01\x00\x00")

func wwwTemplatesHtmlIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_wwwTemplatesHtmlIndexHtml,
		"www/templates/html/index.html",
	)
}

func wwwTemplatesHtmlIndexHtml() (*asset, error) {
	bytes, err := wwwTemplatesHtmlIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "www/templates/html/index.html", size: 364, mode: os.FileMode(420), modTime: time.Unix(1576394020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"www/templates/html/id.html":                wwwTemplatesHtmlIdHtml,
	"www/templates/html/inc_common_css.html":    wwwTemplatesHtmlInc_common_cssHtml,
	"www/templates/html/inc_common_footer.html": wwwTemplatesHtmlInc_common_footerHtml,
	"www/templates/html/inc_common_header.html": wwwTemplatesHtmlInc_common_headerHtml,
	"www/templates/html/inc_common_meta.html":   wwwTemplatesHtmlInc_common_metaHtml,
	"www/templates/html/inc_id_basics.html":     wwwTemplatesHtmlInc_id_basicsHtml,
	"www/templates/html/inc_id_status.html":     wwwTemplatesHtmlInc_id_statusHtml,
	"www/templates/html/inc_id_status.html~":    wwwTemplatesHtmlInc_id_statusHtml2,
	"www/templates/html/index.html":             wwwTemplatesHtmlIndexHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"www": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"html": &bintree{nil, map[string]*bintree{
				"id.html":                &bintree{wwwTemplatesHtmlIdHtml, map[string]*bintree{}},
				"inc_common_css.html":    &bintree{wwwTemplatesHtmlInc_common_cssHtml, map[string]*bintree{}},
				"inc_common_footer.html": &bintree{wwwTemplatesHtmlInc_common_footerHtml, map[string]*bintree{}},
				"inc_common_header.html": &bintree{wwwTemplatesHtmlInc_common_headerHtml, map[string]*bintree{}},
				"inc_common_meta.html":   &bintree{wwwTemplatesHtmlInc_common_metaHtml, map[string]*bintree{}},
				"inc_id_basics.html":     &bintree{wwwTemplatesHtmlInc_id_basicsHtml, map[string]*bintree{}},
				"inc_id_status.html":     &bintree{wwwTemplatesHtmlInc_id_statusHtml, map[string]*bintree{}},
				"inc_id_status.html~":    &bintree{wwwTemplatesHtmlInc_id_statusHtml2, map[string]*bintree{}},
				"index.html":             &bintree{wwwTemplatesHtmlIndexHtml, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
